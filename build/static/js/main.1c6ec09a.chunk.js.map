{"version":3,"sources":["components/submitone.jsx","components/answerOption.jsx","components/questionCount.jsx","components/question.jsx","components/submitall.jsx","components/helpers.jsx","components/quiz.jsx","store/all.js","store/USAH/level1.js","store/USAH/level2.js","components/Quizzes.js","components/headnav.jsx","serviceWorker.js","index.js"],"names":["Grade","isGraded","this","props","onegraded","isShowAnswer","showanswer","fullans","data2","correctanswer","correct","className","onClick","showanswerclick","React","Component","Answers","handleShowOneAnsClick","bind","state","isOneGraded","graded","isShowOneAnswer","answerorder","isCorrect","prevProps","setState","addpoints","answer","isgrade","data1","a1","answers","radioName","name","a","tempkey","olda","shuffleanswers","q","push","key","type","disabled","id","handleAnswerClick","length","Count","num","Question","id1","tabIndex","question","GradeAll","resetallclick","gradeallclick","createRandom","arr","namestate","myArr","randomizedArr","randomIndex","Math","floor","random","splice","Quiz","handleGradeAllClick","handleResetAllClick","handleCorrectAnswer","handleTimerClick","isAllGraded","questionorder","numcorrect","isTimed","console","log","prevState","$","prop","qa1","data","totalquestions","score","round","lenquestions","Array","from","keys","shufflequestions","i2","tempj","oldj","allanswers","incorrectanswers","concat","lenanswers","toString","test","k","gradescore","handleIsCorrect","alltests","Quizzes","datafilter","booklevels","i1","Object","values","book","level","H","useState","isOpen","setIsOpen","dropdownOpen","setDropdownOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","Dropdown","nav","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","NavItem","NavLink","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1c6ec09a.chunk.js","sourcesContent":["import React from 'react';\n\nclass Grade extends React.Component {\n\n  render() {\n        const isGraded = this.props.onegraded;\n        const isShowAnswer = this.props.showanswer;\n        let fullans = this.props.data2.correctanswer;\n\n\n        if (isGraded===true) {\n            if(isShowAnswer===true){\n\n                return(\n                  <div>\n                    <h6> {fullans} </h6>\n                  </div>)\n              }\n              if(isShowAnswer!==true){\n                  if(this.props.correct===true){\n                    return(\n                      <div>\n                        <h6>Correct!</h6>\n                      </div>)\n                    }\n                  if(this.props.correct!==true){\n\n\n                    return(\n                      <div>\n                        <h6>WRONG!</h6>\n                        <button className=\"grade\" onClick={this.props.showanswerclick}>\n                        Show Answer\n                        </button>\n                      </div>)\n                    }\n                  }\n                }\n\n         if (isGraded!==true) {\n\n          return(<div></div>)\n        }\n\n      }\n    }\n\nexport default Grade;\n","import React from 'react';\nimport Grade from './submitone.jsx'\n//import $ from 'jquery';\n\nclass Answers extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleShowOneAnsClick = this.handleShowOneAnsClick.bind(this);\n    this.state = {\n      isOneGraded: this.props.graded,\n      isShowOneAnswer: false,\n      answerorder: [],\n      isCorrect: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.graded !== prevProps.graded) {\n      this.setState({\n        isOneGraded: this.props.graded,\n        isShowOneAnswer: false\n      })\n      if (this.props.graded === false) {\n        this.setState({\n          answerorder: [],\n          isCorrect: false\n        })\n      }\n      if (this.props.graded !== false) {\n        if (this.state.isCorrect === true) {\n          this.props.addpoints();\n        }\n      }\n    }\n  };\n\n  handleAnswerClick(answer, isgrade) {\n    let userAnswer = answer;\n    let correctAnswer = this.props.data1.correctanswer;\n    let isCorrect = userAnswer === correctAnswer;\n    this.setState({\n      isCorrect: isCorrect\n    });\n\n  };\n\n  handleShowOneAnsClick() {\n    this.setState({isShowOneAnswer: true});\n  }\n\n  render() {\n    //console.log('answers key',this.props.name)\n      var a1 = [];\n      const answers = this.props.answers\n      const radioName = this.props.name;\n      for (var q = 0; q < answers.length; q++) {\n        let a\n        let tempkey = this.state.answerorder\n        if (this.props.graded === false) {\n          //shuffle order of answer options if its in not graded state\n          let olda = answers[this.props.shuffleanswers[q]];\n          tempkey = tempkey.push(olda)\n          a = this.state.answerorder[q]\n        }\n        if (this.props.graded !== false) {\n          //dont change order of answer options if its in graded state\n          a = tempkey[q]\n        }\n        a1.push(\n        <div key={radioName+q}>\n          <ul className=\"answers\">\n            <li>\n              <input type=\"radio\"\n                      disabled={this.state.isOneGraded}\n                      name={radioName}\n                      id={a}\n                      onClick={()=> this.handleAnswerClick(a,\n                                                          this.state.isOneGraded)}/>\n              <label>{a}</label>\n            </li>\n          </ul>\n        </div>);}\n\n    return (\n      <div>\n      {a1}\n      <Grade showanswerclick={this.handleShowOneAnsClick}\n              showanswer={this.state.isShowOneAnswer}\n              onegraded={this.state.isOneGraded}\n              name={radioName}\n              data2={this.props.data1}\n              correct={this.state.isCorrect}/>\n      </div>\n    );\n  }\n}\nexport default Answers;\n","import React from 'react';\n\nclass Count extends React.Component {\n  render() {\n    return ( <p className = \"question-count questions\" >\n                { this.props.num + 1 }\n              </p>\n    );\n  }\n}\n\n\nexport default Count;\n","import React from 'react';\nimport Count from './questionCount.jsx'\n\nclass Question extends React.Component {\n  render() {\n    return (\n      <div>\n      <Count data2={this.props.data2} id1={this.props.id} num={this.props.num}/>\n      <p className=\"question-asked questions\" tabIndex=\"0\">\n\n        {this.props.data2[this.props.id].question}\n      </p>\n      </div>\n);}}\nexport default Question;\n","import React from 'react';\n\nclass GradeAll extends React.Component {\n\n  render() {\n        const isGraded = this.props.graded;\n        if (isGraded===true) {\n            return(\n              <button className=\"grade\" onClick={this.props.resetallclick}>\n                Reset Test\n              </button>)\n              }\n         if (isGraded!==true) {\n          return(\n              <button className=\"grade\" onClick={this.props.gradeallclick}>\n                Grade Test\n              </button>\n        )\n        }\n      }}\n\nexport default GradeAll;\n","\nconst createRandom = function(arr, namestate) {\nlet myArr = [...arr];\nlet randomizedArr = [];\nwhile (myArr.length > 0) {\n  var randomIndex = Math.floor(Math.random() * myArr.length);\n  randomizedArr.push(myArr[randomIndex]);\n  myArr.splice(randomIndex, 1);\n}\nreturn randomizedArr;\n}\n\nexport default createRandom;\n","import React from 'react';\nimport Answers from './answerOption.jsx'\nimport Question from './question.jsx'\nimport GradeAll from './submitall.jsx'\nimport createRandom from './helpers.jsx';\nimport $ from 'jquery';\n\nclass Quiz extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleGradeAllClick = this.handleGradeAllClick.bind(this);\n    this.handleResetAllClick = this.handleResetAllClick.bind(this);\n    this.handleCorrectAnswer = this.handleCorrectAnswer.bind(this);\n    this.handleTimerClick = this.handleTimerClick.bind(this);\n\n    this.state = {isAllGraded: false,\n      questionorder: [],\n      numcorrect: 0,\n    isTimed: false};\n  };\n\n  handleTimerClick() {\n    this.setState({isTimed: true});\n    console.log('I want it timed')\n  };\n\n  handleGradeAllClick() {\n    this.setState({isAllGraded: true});\n    console.log('I want the timer to stop')\n  };\n\n  handleCorrectAnswer() {\n    this.setState(prevState => ({\n      numcorrect: prevState.numcorrect + 1\n    }));\n  };\n\n  handleResetAllClick() {//also need to clear answerorder\n    this.setState({isAllGraded: false,\n      questionorder: [],\n      isTimed: false,\n      numcorrect: 0\n    });\n    console.log('Timer should clear')\n\n    $(`input[name$=test${this.props.id}]`).prop(\"checked\", false);\n  }\n\n  render() {\n    var qa1 = [];\n    let {data} = this.props\n    let {numcorrect}= this.state\n    let totalquestions = data.length\n    let score = 0\n    if(totalquestions>0){\n     score =  Math.round((numcorrect/totalquestions)*100)}\n     if(this.state.isTimed===false){\n     qa1.push(  <h4 key={this.props.id+'timerask'}> <button className='timer' onClick={this.handleTimerClick}>Time It!</button> </h4>);}\n     if(this.state.isTimed!==false){\n    qa1.push(   <h6 key={this.props.id+'timerresponse'}>I should be a running clock from 0 </h6>);\n     }\n      qa1.push( <h5 key={this.props.id}>\n              Score: {numcorrect}/{totalquestions} = {score}%</h5>\n            );\n\nvar lenquestions = Array.from(Array(this.props.data.length).keys())\nlet shufflequestions = createRandom(lenquestions)\n\n    for (var i2 = 0; i2 < data.length; i2++) {\n      let tempj\n      let tempkey = this.state.questionorder\n\n      if (this.state.isAllGraded === false) {\n        //shuffle order of answer options if its in not graded state\n\n        let oldj = shufflequestions[i2];\n        tempkey = tempkey.push(oldj)\n        tempj = this.state.questionorder[i2]\n      }\n      if (this.state.isAllGraded !== false) {\n        //dont change order of answer options if its in graded state\n        tempj = tempkey[i2]\n      }\n      const allanswers =\n        data[tempj].incorrectanswers ? data[tempj].incorrectanswers.concat(data[tempj].correctanswer) : [];\n      var lenanswers = Array.from(Array(allanswers.length).keys())\n      var shuffleanswers = createRandom(lenanswers)\n      qa1.push(<Question data2={data} id={tempj} key={tempj} num={i2}/>);\n      qa1.push(\n          <Answers\n          graded={this.state.isAllGraded}\n          data1={data[tempj]}\n          answers={allanswers}\n          shuffleanswers = {shuffleanswers}\n          addpoints={this.handleCorrectAnswer}\n          name={'question'+i2.toString()+'test'+this.props.id}\n          key={'question'+i2.toString()+'test'+this.props.id}\n          />);\n    }\n    return (\n      <div>\n      {qa1}\n      <GradeAll graded={this.state.isAllGraded}\n        test={this.props.k}\n        gradeallclick={this.handleGradeAllClick}\n        resetallclick={this.handleResetAllClick}\n        gradescore={this.handleIsCorrect}/>\n      </div>\n    );\n  }\n}\n\nexport default Quiz;\n","import QUESTION_U1 from './USAH/level1.js'\nimport QUESTION_U2 from './USAH/level2.js'\n\nvar alltests = [{\n    'id': '1usahall',\n    'book': 'USA Hockey',\n    'level': '1',\n    'qa': QUESTION_U1},\n    {\n        'id': '2usahall',\n        'book': 'USA Hockey',\n        'level': '2',\n        'qa': QUESTION_U2}\n  ]\n\nexport default alltests;\n","const QUESTION_U1 =\n  [{id:'1usa1',\n    question: \"Any player on the players' or penalty bench who interferes, in any manner, with the movement of the puck on the ice while play is in progress, shall be assessed a minor penalty for_________?\",\n    correctanswer:'Interference.',\n    incorrectanswers: [\n      'Unsportsmanlike Conduct',\n      'Holding',\n    ]\n  },\n  { id:'1usa2',\n    question: 'The proper signal for a goal scored is pointing at the goal with your non-whistle hand while simultaneously blowing the whistle.',\n    correctanswer:'True.',\n    incorrectanswers: [\n      \"False\"\n    ]\n  },\n  { id:'1usa3',\n    question: \"A player checks an opponent from behind with excessive force while the opponent is in a vulnerable or defenseless position or the action was deemed to be a deliberate attempt to injure an opponent. The proper penalty is a Match Penalty.\",\n    correctanswer:'True.',\n    incorrectanswers: [\n      \"False\"\n    ]\n  }\n];\n\nexport default QUESTION_U1;\n\n\n//https://www.usahockeyrulebook.com/page/show/1084647-rule-603-boarding#pageEl_39686374\n//https://www.usahockeyrulebook.com/page/show/1084647#pageEl_39686374\n//https://www.usahockeyrulebook.com/page_element/ajax/34377950.json\n","const QUESTION_U2 = [\n  { id:'2usa1',\n    question: 'Please indicate which player serves the penalty: Bench Minor Penalty to Team Official.',\n    correctanswer:'Player on the ice when the infraction occurred.',\n    incorrectanswers: [\n      'Player on the bench (non goalkeeper) when the infraction occurred',\n      'Offending Player'\n    ]\n  },\n  { id:'2usa2',\n    question: \"Please indicate the proper face-off location: Premature Goalie Substitution.\",\n    correctanswer:\"Center Ice Face-off spot.\",\n    incorrectanswers: [\n      \"Neutral Zone Face-off spot\",\n      \"End Zone Face-off spot\"\n    ]\n  }\n];\n\nexport default QUESTION_U2;\n","import React from 'react';\nimport Quiz from './quiz.jsx'\nimport alltests from '../store/all.js';\n\n//https://stackoverflow.com/questions/56501078/randomizing-quiz-answers-fetched-from-a-rest-api?rq=1\n\nclass Quizzes extends React.Component {\n\n  render() {\n\n    const datafilter = alltests\n    var booklevels = [];\n    for (var i1 = 0; i1 < datafilter.length; i1++) {\n\n      const data = Object.values(datafilter[i1]['qa']);\n\n      booklevels.push(\n        <div key={datafilter[i1].id}>\n          <h4> {datafilter[i1].book} - Level {datafilter[i1].level} </h4>\n          <Quiz id={datafilter[i1].id} data={data}/>\n        </div>);\n      }\n    return (\n      <div className='quiz-header'>\n      {booklevels}\n      </div>\n\n    );\n  }\n}\n\nexport default Quizzes;\n","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from 'reactstrap';\n\nconst H = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const togglec = () => setIsOpen(!isOpen);\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggledd = () => setDropdownOpen(!dropdownOpen);\n\n      return (\n      <header>\n  <Navbar color=\"light\" light expand=\"md\">\n    <NavbarBrand href=\"/\">Ref Quiz</NavbarBrand>\n    <NavbarToggler onClick={togglec} />\n    <Collapse isOpen={isOpen} navbar>\n      <Nav className=\"mr-auto\" navbar>\n\n      <Dropdown nav isOpen={dropdownOpen} toggle={toggledd}>\n         <DropdownToggle nav caret>\n           USA Hockey\n         </DropdownToggle>\n         <DropdownMenu>\n           <DropdownItem>Level 1</DropdownItem>\n           <DropdownItem>Level 2</DropdownItem>\n           <DropdownItem>Level 3</DropdownItem>\n           <DropdownItem>Level 4</DropdownItem>\n           <DropdownItem>All Levels</DropdownItem>\n           <DropdownItem divider />\n           <DropdownItem>Sled</DropdownItem>\n           <DropdownItem divider />\n           <DropdownItem>Penalty Options</DropdownItem>\n         </DropdownMenu>\n       </Dropdown>\n\n        <NavItem>\n          <NavLink href=\"#\">Hockey Canada</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"#\">NCAA</NavLink>\n        </NavItem>\n      </Nav>\n      <Nav className=\"ml-auto\" navbar>\n        <NavItem>\n          <NavLink target='_blank' href=\"https://hngodwin.com\">Portfolio</NavLink>\n        </NavItem>\n        </Nav>\n    </Collapse>\n  </Navbar>\n      </header>\n);\n\n}\n\n\nexport default H;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Quizzes from './components/Quizzes.js';\nimport H from './components/headnav.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\n\nReactDOM.render(\n<div>\n      <H/>\n    <Quizzes />\n</div>\n    ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}